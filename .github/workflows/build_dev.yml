name: CI/CD to AWS AppRunner with GitHub Actions
on:
  push:
    branches: [development] # Trigger workflow on git push to main branch
  workflow_dispatch: # Allow manual invocation of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check if deployment bucket exists
        id: deployment-stack-exists
        run: |
          stack_name="finance-deployment-stack"
          stack_status=$(aws cloudformation describe-stacks --stack-name $stack_name --query "Stacks[0].StackStatus" --output text)
          
          if [ "$stack_status" = "CREATE_COMPLETE" ] || [ "$stack_status" = "UPDATE_COMPLETE" ]; then
            echo "Stack already exists with status: $stack_status"
            exit 0  # Salir sin hacer nada si el stack ya existe
          else
            echo "Stack does not exist or is in an incomplete state."
          fi
        continue-on-error: true

      - name: Generar Archivos ZIP de lambdas
        run: |
          # Genera archivos ZIP para cada subcarpeta dentro de "api-rest"
          cd api-rest
          for dir in */; do
            dir_name=$(basename $dir)
            zip -r $dir_name.zip $dir
          done

      - name: Creating bucket for deployment
        if: steps.deployment-stack-exists.outputs.stack_exists == 'false' # Ejecutar solo si el stack no existe o no está completo
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: finance-deployment-stack
          template: cf/deployment.yaml
          capabilities: CAPABILITY_NAMED_IAM

      - name: Upload contents of 'cf' folder to S3 bucket
        run: |
          aws s3 sync cf s3://dev-deployment-finance-template-bucket/cf
          echo "Archivos subidos exitosamente"
          
          # Subir archivos ZIP de la carpeta 'api-rest' al bucket S3
          for zip_file in api-rest/*.zip; do
            aws s3 cp $zip_file s3://dev-deployment-finance-template-bucket/api-rest/
            echo "Archivo $zip_file subido exitosamente"
          done
        continue-on-error: true # Esto permite que el flujo continúe incluso si algún comando falla


      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: finance-backend-stack-backend
          template: cf/main-finance.yaml
          capabilities: CAPABILITY_NAMED_IAM
          # parameter-overrides: "MyParam1=myValue,MyParam2=${{ secrets.MY_SECRET_VALUE }}"
